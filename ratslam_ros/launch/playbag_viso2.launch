<!---->
<!--For setting up and running several nodes at the same time-->
<launch>
<!--Here the "file"-argument for the rosbag-node is set, CHANGE TO LOCAL PATH OF DESIRED BAG FILE-->
  <!--<arg name="file" value="-r 1 /home/username/data/bags/filename.bag"/>-->
<!---->
  <!--<arg name="file" value="-r 1 /home/snstat/net/syncthing/snstat_share/working_folder_all/bags/large_scale/2017-04-04-16-29-47.bag"/>-->
  
<!--Den som körts mest.. elevkontoren
  <arg name="file" value="-r 1 /home/snstat/net/syncthing/snstat_share/working_folder_all/bags/2017-05-06-02-33-19.bag"/>-->
  <!--Den långa genom allt-->
  <!--<arg name="file" value="-r 1 /home/snstat/net/syncthing/snstat_share/working_folder_all/bags/2017-05-06-01-46-13.bag"/>-->
<!--rakt fram och tillbaka, typ samma hastighet
  <arg name="file" value="-r 1 /home/snstat/net/syncthing/snstat_share/working_folder_all/bags/IN_REPORT/different_speeds_straight_line.bag"/>-->
<!--Lite runt på PTC med ett stopp
   <arg name="file" value="-r 1 /home/snstat/net/syncthing/snstat_share/working_folder_all/bags/IN_REPORT/stop_along_path.bag"/>-->
<!--L-sväng snabbt dit och sakta tillbaka
  <arg name="file" value="-r 1 /home/snstat/net/syncthing/snstat_share/working_folder_all/bags/IN_REPORT/L-shape_different_speed.bag"/>-->
<!--
  <arg name="file" value="-r 1 /home/snstat/net/syncthing/snstat_share/working_folder_all/bags/IN_REPORT/wigle_forward_and_back.bag"/>-->
<!---->
  <arg name="file" value="-r 1 /home/bbox/net/syncthing/snstat_share/working_folder_all/ratslam_viso2_ws/bags/demofile.bag"/>


<!--NEWCAM-->
<!--dsa
  <arg name="file" value="-r 1 /home/snstat/net/syncthing/snstat_share/working_folder_all/bags/newcam/2017-05-14-06-11-39.bag"/>
  <arg name="file" value="-r 1 /home/snstat/net/syncthing/snstat_share/working_folder_all/bags/filter5.bag"/>
  <arg name="file" value="-r 1 /home/snstat/net/syncthing/snstat_share/working_folder_all/bags/2017-05-14-06-54-15.bag"/>-->
  
  
<!--END OF ARGUMENTS-->

  <!--Add CameraInfo message when the image source does not provice this topic-->
	<node name="CameraHelper" pkg="ratslam_ros" type="camerahelper" cwd="node" required="true" ns="camera" />

<!--END OF PARAMETERS-->


  <!--Run the rosbag node with the .bag-file specified above-->
  <node pkg="rosbag" type="play" name="playback" args="$(arg file)" ns="camera">
    <!--Remap if video is recorded on another topic then desired, in the example below, namespace is changed from "camera" to "picam"-->
    <!-- <remap from="/camera/image/compressed" to="/picam/image/compressed" />-->
     <!----><remap from="/camera/image/compressed" to="/ratrover/camera/image/compressed"/>
  </node>


  <!--Run a "image_transport"-node to republish a decompressed version the sensor_msgs::CompressedImage to sensor_msgs::Image-->
  <node name="republish_decompress" type="republish" pkg="image_transport" output="screen" args="compressed in:=/ratrover/camera/image raw out:=/camera/image_raw" ns="camera"/>
  <!-- <node name="republish_ratslam" type="republish" pkg="image_transport" output="screen" args="compressed in:=/camera/image compressed out:=/ratrover/camera/image/compressed" ns="camera"/>-->
  



  <!--Start image_proc to rectify images with CameraInfo and Images-->
  <node name="image_processing" pkg="image_proc" type="image_proc" cwd="node" required="true" ns="camera"/>


  <!--Start visual_odometry node-->
  <arg name="camera" default="/camera"/>
  <param name="/use_sim_time" value="false"/>
    <!--Start nodelet manager
  <arg name="manager" default="/nodelet_manager"/>-->

    <!-- Monochrome rectified image 
  <node pkg="nodelet" type="nodelet" name="rectify_mono"
        args="load image_proc/rectify $(arg manager)"
   />-->
    <!-- Viso2 -->
  <node pkg="viso2_ros" type="mono_odometer" name="mono_odometer" ns="visual_odometry">
    <!--<remap from="mono" to="$(arg camera)"/>-->
    <remap from="image" to="$(arg camera)/image_rect"/>
    <!--<remap from="/mono_odometer/odometry" to="/odom"/>-->
    <param name="base_link_frame_id" value="$(arg camera)"/>
  </node>

  <!-- Translate odometry message -->
  <node name="OdomHelper" pkg="ratslam_ros" type="odomhelper" cwd="node" required="true" ns="visual_odometry"/>



  <!--Run ratSLAM nodes-->
<machine name="local_alt" address="localhost" default="true" />
	
	<node name="RatSLAMLocalViewCells" pkg="ratslam_ros" type="ratslam_lv" args="$(find ratslam_ros)/config/config_crazyrat.txt _image_transport:=compressed" cwd="node" required="true"/>
	<node name="RatSLAMPoseCells" pkg="ratslam_ros" type="ratslam_pc" args="$(find ratslam_ros)/config/config_crazyrat.txt _image_transport:=compressed" cwd="node" required="true" />
	<node name="RatSLAMExperienceMap" pkg="ratslam_ros" type="ratslam_em" args="$(find ratslam_ros)/config/config_crazyrat.txt _image_transport:=compressed" cwd="node" required="true"/>

	
	<node pkg="rqt_plot" type="rqt_plot" name="plot_vt_em" args="/ratrover/LocalView/Template/current_id,/ratrover/PoseCell/TopologicalAction/dest_id" ns="data_out"/>
	<node pkg="rosbag" type="record" name="record" args="/ratrover/ExperienceMap/Map /ratrover/ExperienceMap/RobotPose /ratrover/LocalView/Template /ratrover/PoseCell/TopologicalAction -O ratslam_out.bag" ns="data_out"/>



















<!--
from /ratrover_topic/camera/image/compresse
to /picam/image/compressed

	<node name="RatSLAMCameraHelper" pkg="ratslam_ros" type="ratslam_camhelper" args="$(find ratslam_ros)/config/config_crazyrat.txt _image_transport:=compressed" cwd="node" required="true" />
-->



<!--
  <node name="viso2_vo" pkg="viso2_ros" type="image_proc" cwd="node" required="true" ns="picam"/>

  ROS_NAMESPACE=picam roslaunch viso2_ros demo_mono.launch
-->

 <!--
  <node name="image_proc" pkg="image_proc" type="image_proc" ns="usb_cam">
    <param name="ROS_NAMESPACE" value="usb_cam" />
    <remap from="/usb_cam/image_mono" to="/crazyrat_topic/camera/image"/>
    
  </node>
  -->

  <!--REAL TOPIC IS /camera/image/compressed
                    sensor_msgs/CompressedImage 
  <node name="image_proc" pkg="image_proc" type="image_proc" ns="usb_cam">
    <param name="ROS_NAMESPACE" value="usb_cam" />
    <remap from="/camera/image/compressed" to="/crazyrat_topic/camera/image"/>
    
  </node>
  
  Topics to remap to for opencv_apps http://wiki.ros.org/opencv_apps#goodfeature_track
  FROM:
  /camera/image/compressed


  5. Motion Analysis Nodes
  /goodfeature_track/image
  /camshift/image
  /fback_flow/image
  /lk_flow/image
  /phase_corr/image
  /simple_flow/image
  
  6. Object Segmentaion Nodes
  /segment_objects/image
  This node apply Gaussian Mixture-based Background/Foreground Segmentation algorithm to input ROS sensor_msgs/Image and outputs segemted region as opencv_apps/ContourArrayStamped and area as std_msgs/Float64. 
  http://docs.opencv.org/2.4/modules/video/doc/motion_analysis_and_object_tracking.html?#backgroundsubtractormog
  outputs: http://docs.ros.org/api/opencv_apps/html/msg/ContourArrayStamped.html

  /watershed_segmentation/image
  This node apply the watershed segmentation algorithm to input ROS sensor_msgs/Image and outputs segemted region as opencv_apps/ContourArrayStamped
  http://docs.opencv.org/2.4/modules/imgproc/doc/miscellaneous_transformations.html#watershed


  7. Image filter nodes
  /rgb_color_filter/image This node filters the image by RGB color and generates a mask image. 
  /hls_color_filter/image This node filters the image by HSL color and generates a mask image. 
  /hsv_color_filter/image This node filters the image by HSL color and generates a mask image. 



  
  other shit
  /edge_detection/image
  -->

<!--does not work very well, to get get camera info>
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen">
    <param name="korvkamera" value="/picam" />
    <param name="camera_info_url" type="string" value="package://usb_cam/calibdata/picam.yaml"/>
    
  </node>
-->


  <!--<node name="camhelp" type="ratslam_camhelper" pkg="ratslam_ros" args="compressed in:=/crazyrat_topic/camera/image raw out:=/picam/image_raw" cwd="node" required="true"/>
  <node name="republish" type="republish" pkg="image_transport" output="screen" args="compressed in:=/crazyrat_topic/camera/image raw out:=/picam/image_raw" />-->


  <!-- For simplicity, assume top-level manager already running 
  <arg name="manager" />-->
  <!-- Mimic remapping, so can launch with 'camera:=prosilica' 
  <arg name="camera" default="camera" />-->
    <!-- Rectify monochrome images 
  <node pkg="nodelet" type="nodelet" name="rectify_mono"
        args="load image_proc/rectify $(arg manager)">
    <remap from="picam" to="$(arg camera)" />
  </node>-->





</launch>
